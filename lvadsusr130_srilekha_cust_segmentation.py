# -*- coding: utf-8 -*-
"""LVADSUSR130_srilekha_cust_segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zFF1c4cGBB2dezfveq8tIYjEYwelO0xC
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.metrics import silhouette_score
from sklearn.impute import SimpleImputer
from sklearn.ensemble import IsolationForest
from sklearn.model_selection import train_test_split
df3 = pd.read_csv('customer_segmentation.csv')
print("previously the missing values without imputation are:")
print(df3.isnull().sum())

le = LabelEncoder()

categorical_columns = ['Education', 'Marital_Status', 'Dt_Customer']


for c in categorical_columns:
    df3[c] = le.fit_transform(df3[c])

print(df3)

impu= SimpleImputer(strategy='median')
df3_impu = pd.DataFrame(impu.fit_transform(df3), columns=df3.columns)

outl_detec = IsolationForest(contamination=0.05, random_state=44)
outlier = outl_detec.fit_predict(df3_impu)


df3_cleaned = df3_impu[outlier == 1]

print("Briefing of Statistics:")
print(df3_cleaned.describe())

scale = StandardScaler()
m = scale.fit_transform(df3_cleaned)
m_train, m_test = train_test_split(m, test_size=0.2, random_state=43)
km = KMeans(random_state=43)
inertia_val = []
number_clust_range = range(1, 11)
for number_cluster in number_clust_range:
    km.set_params(n_clusters=number_cluster)
    km.fit(m_train)
    inertia_val.append(km.inertia_)
plt.plot(number_clust_range, inertia_val, marker='o', linestyle='-')
plt.xlabel('No. of Clusters')
plt.ylabel('Inertia')
plt.title('Elbow Method')
plt.xticks(number_clust_range)
plt.show()
silhouette_avg = silhouette_score(m_test, km.predict(m_test))
print("Silhouette Score:", silhouette_avg)
test_clust = km.predict(m_test)
print("Predicted Clusters on Test Set:")
print(test_clust)